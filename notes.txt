To launch project docker is required

Discontinuation of django-allauth:
django-allauth works well only with Django, so I opted for django-rest-auth,
which handled both Google authentication and regular authentication quite well. However, due to recent updates
in Google's authentication methods, it no longer meets the required functionalities. That's why I decided to implement my own
authentication functionality (described below).

I have implemented authorization using djangorestframework-simplejwt.
I made this decision for several reasons:
1. Ease of use: drf-simplejwt is very convenient and easy to use.
2. Flexibility: With this library, I created code that can be easily modified and adapted
to fit the project's needs.

Additionally, I used several views from django-rest-auth.

Google Authorization:
Due to recent updates from Google, the django-rest-auth library, unfortunately,
is not functional (its built-in serializer requires access_token, code, and id_token, whereas in the new version
of Google authentication, the API only provides id_token).
That's why I decided to create my own view function (GoogleAuthView), which works successfully in my
project in conjunction with simple-jwt
(another reason to use drf-simplejwt :) ).

In addition, I implemented some JavaScript logic to test the functionality of my endpoint.

Celery:
I thought it would be cool if users received a notification some time before their Todo deadline,
so I added Celery.

PostgreSQL instead of SQLite:
I thought adding PostgreSQL to my project would be great :)

Docker & docker-compose:
I thought it would be a good practice to include these tools in my project.

Swagger:
I added swagger and redoc to my project to better understand its structure (using
the drf-yasg library).




    


